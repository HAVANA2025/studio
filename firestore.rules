
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user has the 'Executive Board' role
    function isExecutiveBoard(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role == 'Executive Board';
    }

    // Default deny all reads/writes to all collections
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Allow public read for events
    match /events/{eventId} {
        allow read: if true;
        allow write: if request.auth != null && isExecutiveBoard(request.auth.uid);
    }
    
    // Allow public read for announcements
    match /announcements/{announcementId} {
        allow read: if true;
        allow write: if request.auth != null && isExecutiveBoard(request.auth.uid);
    }

    // Allow read/write to user's own document
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null; // Allow any authenticated user to create their own user doc
    }
    
    // Rules for user creation requests
    match /userCreationRequests/{requestId} {
      // Admins can read all requests to display them in the panel
      allow read: if request.auth != null && isExecutiveBoard(request.auth.uid);
      
      // Admins can create new requests
      allow create: if request.auth != null && isExecutiveBoard(request.auth.uid);
      
      // Admins can delete requests (after fulfilling them)
      allow delete: if request.auth != null && isExecutiveBoard(request.auth.uid);
      
      // Nobody can update a request once it's made
      allow update: if false;
    }
  }
}
